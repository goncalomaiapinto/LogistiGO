---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
paths:
  "/api/v1/auth/login":
    post:
      summary: login
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/auth/register":
    post:
      summary: register
      tags:
      - Auth
      parameters: []
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    role:
                      type: string
                      enum:
                      - admin
                      - user
                    company_id:
                      type: integer
                  required:
                  - name
                  - email
                  - password
  "/api/v1/auth/logout":
    post:
      summary: logout
      tags:
      - Auth
      responses:
        '200':
          description: successful
  "/api/v1/companies":
    get:
      summary: list companies
      tags:
      - Companies
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: create company (admin only)
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
  "/api/v1/companies/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: show company
      tags:
      - Companies
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    put:
      summary: update company (admin only)
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: object
                  properties:
                    name:
                      type: string
    delete:
      summary: delete company (admin only)
      tags:
      - Companies
      security:
      - bearerAuth: []
      responses:
        '204':
          description: deleted
  "/api/v1/tasks":
    get:
      summary: list tasks
      tags:
      - Tasks
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: create task
      tags:
      - Tasks
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    status:
                      type: string
                    user_id:
                      type: integer
                    company_id:
                      type: integer
                  required:
                  - title
  "/api/v1/tasks/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: show task
      tags:
      - Tasks
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '403':
          description: forbidden
    put:
      summary: update task
      tags:
      - Tasks
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
    delete:
      summary: delete task
      tags:
      - Tasks
      security:
      - bearerAuth: []
      responses:
        '204':
          description: deleted
  "/api/v1/users":
    get:
      summary: list users (admin only)
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '403':
          description: forbidden
    post:
      summary: create user (admin only)
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    role:
                      type: string
                      enum:
                      - admin
                      - user
                    company_id:
                      type: integer
                  required:
                  - name
                  - email
                  - password
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: show user (self or admin)
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '403':
          description: forbidden
    put:
      summary: update user (self or admin)
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
    delete:
      summary: delete user (admin only)
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '204':
          description: deleted
